From 4e9650000b42a693a32541079a77ae4416dfadf7 Mon Sep 17 00:00:00 2001
From: Ihar Hrachyshka <ihrachys@redhat.com>
Date: Thu, 24 Nov 2016 11:42:15 +0000
Subject: [PATCH] Revert "DHCP agent: advertise SLAAC prefixes"

This reverts commit 11c3f0cafd62f9f9b46fd494f9cc6c372f77b1c9.

This patch broke all CentOS installations that ship dnsmasq 2.66 that
does not support --ra-param CLI argument.

Change-Id: I1919f9d3af40bb2f10693420ae08e1ec62accb65
Closes-Bug: #1644312
---
 neutron/agent/linux/dhcp.py                 |  4 ----
 neutron/tests/unit/agent/linux/test_dhcp.py | 21 +++++++--------------
 2 files changed, 7 insertions(+), 18 deletions(-)

diff --git a/neutron/agent/linux/dhcp.py b/neutron/agent/linux/dhcp.py
index f2bb332..477cbde 100644
--- a/neutron/agent/linux/dhcp.py
+++ b/neutron/agent/linux/dhcp.py
@@ -332,8 +332,6 @@ class Dnsmasq(DhcpLocalProcess):
             '--dhcp-optsfile=%s' % self.get_conf_file_name('opts'),
             '--dhcp-leasefile=%s' % self.get_conf_file_name('leases'),
             '--dhcp-match=set:ipxe,175',
-            '--enable-ra',
-            '--ra-param=%s,0,0' % self.interface_name,
         ]
         if self.device_manager.driver.bridged:
             cmd += [
@@ -365,8 +363,6 @@ class Dnsmasq(DhcpLocalProcess):
                                   constants.DHCPV6_STATELESS] or
                         not addr_mode and not ra_mode):
                     mode = 'static'
-                elif addr_mode == constants.IPV6_SLAAC:
-                    mode = 'slaac'

             cidr = netaddr.IPNetwork(subnet.cidr)

diff --git a/neutron/tests/unit/agent/linux/test_dhcp.py b/neutron/tests/unit/agent/linux/test_dhcp.py
index 2b1da9a..5115d2b 100644
--- a/neutron/tests/unit/agent/linux/test_dhcp.py
+++ b/neutron/tests/unit/agent/linux/test_dhcp.py
@@ -1075,8 +1075,6 @@ class TestDnsmasq(TestBase):
             '--dhcp-optsfile=/dhcp/%s/opts' % network.id,
             '--dhcp-leasefile=/dhcp/%s/leases' % network.id,
             '--dhcp-match=set:ipxe,175',
-            '--enable-ra',
-            '--ra-param=tap0,0,0',
             '--bind-interfaces',
             '--interface=tap0',
         ]
@@ -1092,22 +1090,17 @@ class TestDnsmasq(TestBase):
         else:
             prefix = '--dhcp-range=set:tag%d,%s,%s%s'
             prefix6 = '--dhcp-range=set:tag%d,%s,%s,%s%s'
-        prefix6slaac = '--dhcp-range=set:tag%d,%s,slaac,%s,%s%s'
         possible_leases = 0
         for i, s in enumerate(network.subnets):
-            if s.ip_version == 4:
-                expected.extend([prefix % (
-                    i, s.cidr.split('/')[0], lease_duration, seconds)])
-                possible_leases += netaddr.IPNetwork(s.cidr).size
-            elif s.ip_version == 6:
-                if s.ipv6_address_mode == constants.DHCPV6_STATEFUL:
+            if (s.ip_version != 6
+                or s.ipv6_address_mode == constants.DHCPV6_STATEFUL):
+                if s.ip_version == 4:
+                    expected.extend([prefix % (
+                        i, s.cidr.split('/')[0], lease_duration, seconds)])
+                else:
                     expected.extend([prefix6 % (
                         i, s.cidr.split('/')[0], s.cidr.split('/')[1],
                         lease_duration, seconds)])
-                elif s.ipv6_address_mode == constants.IPV6_SLAAC:
-                    expected.extend([prefix6slaac % (
-                        i, s.cidr.split('/')[0], s.cidr.split('/')[1],
-                        lease_duration, seconds)])
                 possible_leases += netaddr.IPNetwork(s.cidr).size

         if cfg.CONF.advertise_mtu:
@@ -1170,7 +1163,7 @@ class TestDnsmasq(TestBase):
         self.safe.assert_has_calls([mock.call(exp_host_name, exp_host_data),
                                     mock.call(exp_addn_name, exp_addn_data)])

-    def test_spawn_slaac_dhcp_range(self):
+    def test_spawn_no_dhcp_range(self):
         network = FakeV6Network()
         subnet = FakeV6SubnetSlaac()
         network.subnets = [subnet]
--
1.9.1
